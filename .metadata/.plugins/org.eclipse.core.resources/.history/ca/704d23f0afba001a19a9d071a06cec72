package com.javafsfeb.airlinereservationwithjdbc.controller;

import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

import com.javafsfeb.airlinereservationwithjdbc.dto.BookReservationInfoBean;
import com.javafsfeb.airlinereservationwithjdbc.dto.FlightDetailsInfoBean;
import com.javafsfeb.airlinereservationwithjdbc.dto.RegistrationIfoBean;
import com.javafsfeb.airlinereservationwithjdbc.exception.AirlineException;
import com.javafsfeb.airlinereservationwithjdbc.services.UserService;
import com.javafsfeb.airlinereservationwithjdbc.services.UserServiceImpl;




@SuppressWarnings("resource")
public class UserContoller {
	

  UserService user1=new UserServiceImpl();
	Scanner scanner = new Scanner(System.in);
	
	boolean flag = false;
	int regid = 0;
	String emailId = null;
	String password = null;
	String userName = null;
	long mobileNumber = 0;
	String role=null;
	
	public void getprocess() {
	
		do {
			try {
				System.out.println("------------------------------------------------------------------------------");
				System.out.println("Press 1 to user Registration");
				System.out.println("Press 2 to Login if already registered");
				System.out.println("press 3 to see all flight details");
				System.out.println("Press 4 to Exit");
				System.out.println("------------------------------------------------------------------------------");
				int choice = scanner.nextInt();
				switch (choice) {
				case 1:
					do {
						do {
							RegistrationIfoBean bean = new RegistrationIfoBean();
							System.out.println("Enter Your Full Name :");
							userName = scanner.next();
							bean.setName(userName);
							flag = user1.register(bean);
							if (flag == false) {
								System.out.println("not correct");
							}
						} while (!flag);
						do {
							RegistrationIfoBean bean1 = new RegistrationIfoBean();
							System.out.println("Enter regId to register it should contain 5 digits :");
							regid = scanner.nextInt();
							bean1.setRegid(regid);
							flag = user1.register(bean1);
							if (flag == false) {
								System.out.println("not correct");
							}
						} while (!flag);
						do {
							RegistrationIfoBean bean2 = new RegistrationIfoBean();
							System.out.println("Enter mobile number :");
							mobileNumber = scanner.nextLong();
							bean2.setMobilenumber(mobileNumber);
							flag = user1.register(bean2);
							if (flag == false) {
								System.out.println("not correct");
							}
						} while (!flag);
						do {
							RegistrationIfoBean bean = new RegistrationIfoBean();
							System.out.println("Enter Email :");
							emailId = scanner.next();
							bean.setEmail(emailId);
							flag = user1.register(bean);
							if (flag == false) {
								System.out.println("not correct");
							}
						} while (!flag);
						do {
							RegistrationIfoBean bean = new RegistrationIfoBean();
							System.out.println("Enter Password :");
							password = scanner.next();
							bean.setPassword(password);
							flag = user1.register(bean);
							if (flag == false) {
								System.out.println("not correct");
							} else {
								System.out.println("Registered");
								subprocess();
							}

						} while (!flag);
						do {
							RegistrationIfoBean bean = new RegistrationIfoBean();
							System.out.println("Enter Role :");
							role = scanner.next();
							bean.setPassword(password);
							flag = user1.register(bean);
							if (flag == false) {
								System.out.println("not correct");
							} else {
								System.out.println("Registered");
								subprocess();
							}

						} while (!flag);
					} while (flag == false);
					break;
				case 2:
					RegistrationIfoBean bean1 = new RegistrationIfoBean();
					do {
					System.out.println("Enter email :");
					String username1 = scanner.next();
					bean1.setEmail(emailId);
					System.out.println("Enter Password :");
					String password1 = scanner.next();
					bean1.setPassword(password1);
					try {
						user1.authentication(username1, password1);
						System.out.println("Logged in");
						subprocess();// method calling
					} catch (Exception e) {
						System.out.println(" Invalid Credentials");
					}
					}while(!flag);
					break;
				case 3:
					flightdetails();
					break;

				case 4:
					SubController.mainprocess();
					break;

				default:
					System.out.println("Invalid Choice");
					break;
				}
			} catch (Exception ex) {
				System.out.println("Incorrect entry. Please input only a positive integer.");
				scanner.nextLine();
			}
		} while (true);

	}// End of method

	public void subprocess() {

		boolean flag = false;

		int noOfSeats = 0;

		String visano = null;
		String source = null;
		String destination = null;

		String passportno = null;
		UserService user1 = new UserServiceImpl();

		Scanner scanner = new Scanner(System.in);
		do {
			try {
				System.out.println("----------------------------------------------------------");
				System.out.println("Press 1 to Get  all the Flight Details");

				System.out.println("Press 2 to Search the flight by source");
				System.out.println("Press 3 to Search the flight by destination");
				System.out.println("Press 4 to Book a flight");
				System.out.println("press 5 for cancellation");

				System.out.println("Press 6 to main");
				System.out.println("---------------------------------------------------------");
				int choice2 = scanner.nextInt();
				switch (choice2) {
				case 1:
					List<FlightDetailsInfoBean> info = user1.getFlightDetails();
					for (FlightDetailsInfoBean fliBean : info) {

						if (fliBean != null) {
							System.out.println("-----------------------------------");
							System.out.println(fliBean.toString());
							// System.out.println("Flight code is-->" + fliBean.getFlightcode());
							// System.out.println("Flight Name is-->" + fliBean.getFlightname());
							// System.out.println("Source is-->" + fliBean.getSource());
							// System.out.println("Destination is-->" + fliBean.getDestination());
							// System.out.println("ArrivalTime is--->" + fliBean.getArrival_time());

						} else {
							System.out.println("flight info is not present");
						}
					}
					break;

				case 2:
					System.out.println("Search the flight by sourse");
					String source1 = scanner.next();
					FlightDetailsInfoBean bean3 = user1.searchFlightBySource(source1);
					if (bean3 != null) {
						System.out.println(bean3.toString());
						System.out.println("search operation successful");
						// System.out.println("-----------------------------------");
						//
						// System.out.println("Flight code is-->" + bean3.getFlightcode());
						// System.out.println("Flight_Name is-->" + bean3.getFlightname());
						// System.out.println("Source is-->" + bean3.getSource());
						// System.out.println("Destination is-->" + bean3.getDestination());
						//
						// System.out.println("Arrival Time is--->" + bean3.getArrival_time());

					} else {
						System.out.println("flight not found");
					}

					break;

				case 3:
					System.out.println("  Search the flight by the destination :");
					String dest = scanner.next();

					FlightDetailsInfoBean bean4 = user1.searchFlightByDestination(dest);
					if (bean4 != null) {
						System.out.println("-----------------------------------");
						System.out.println(bean4.toString());
						// System.out.println("Flight code is-->" + bean4.getFlightcode());
						// System.out.println("Flight_Name is-->" + bean4.getFlightname());
						// System.out.println("Source is-->" + bean4.getSource());
						// System.out.println("Destination is-->" + bean4.getDestination());

					} else {
						System.out.println("No flights are available with this destination");
					}

					break;
				case 4:

					do {
						try {
							System.out.println("Enter source  :");
							source = scanner.next();

							flag = true;
						} catch (InputMismatchException e) {
							flag = false;

						} catch (AirlineException e) {
							flag = false;
							System.err.println(e.getMessage());
						}
					} while (!flag);
					do {
						try {
							System.out.println("Enter destination  :");
							destination = scanner.next();

							flag = true;
						} catch (InputMismatchException e) {
							flag = false;

						} catch (AirlineException e) {
							flag = false;
							System.err.println(e.getMessage());
						}
					} while (!flag);
					FlightDetailsInfoBean bean10 = user1.booking(source, destination);
					//
					if (bean10 != null) {
						System.out.println(bean10.toString());
						// System.out.println(bean10.getFlightcode());
						// System.out.println(bean10.getFlightname());
						// System.out.println(bean10.getSource());
						// System.out.println(bean10.getDestination());
						// System.out.println(bean10.getArrival_time());
						System.out.println("------------------------------------------");
						System.out.println("press 1 to proceed booking");
						System.out.println("press 2 to cancel");
						System.out.println("-------------------------------------------");
						int choice3 = scanner.nextInt();
						switch (choice3) {
						case 1:
							do {
								try {
									System.out.println("Enter passport number :");
									passportno = scanner.next();

									flag = true;
								} catch (InputMismatchException e) {
									flag = false;

								} catch (AirlineException e) {
									flag = false;
									System.err.println(e.getMessage());
								}
							} while (!flag);
							do {
								try {
									System.out.println("Enter NO OF SEATS  :");
									noOfSeats = scanner.nextInt();

									flag = true;
								} catch (InputMismatchException e) {
									flag = false;

								} catch (AirlineException e) {
									flag = false;
									System.err.println(e.getMessage());
								}
							} while (!flag);
							do {
								try {
									System.out.println("Enter visa number :");
									visano = scanner.next();

									flag = true;
								} catch (InputMismatchException e) {
									flag = false;

								} catch (AirlineException e) {
									flag = false;
									System.err.println(e.getMessage());
								}
							} while (!flag);

							System.out.println("Enter Regid");
							int regid1 = scanner.nextInt();
							RegistrationIfoBean user = new RegistrationIfoBean();
							user.setRegid(regid1);
							System.out.println("Enter Flight code");
							String flightcode3 = scanner.next();
							FlightDetailsInfoBean flight = new FlightDetailsInfoBean();
							flight.setFlightcode(flightcode3);
							try {
								BookReservationInfoBean booked = new BookReservationInfoBean();
								booked.setPassportno(passportno);
								booked.setVisano(visano);
								booked.setNoofseats(noOfSeats);
								BookReservationInfoBean req = user1.ticket(user, flight);
								System.out.println("Booking Done succesfully");
								// System.out.println(req.toString());
								System.out.println("Reg id============"+req.getUser().getRegid());
								System.out.println("User Name=========="+req.getUser().getName());
								System.out.println("Flight Code+======="+req.getFbean().getFlightcode());
								System.out.println("Flight Name========="+req.getFbean().getFlightname());
								System.out.println("Source========="+req.getFbean().getSource());
								System.out.println("Destination====="+req.getFbean().getDestination());
								System.out.println("Arrivali time======="+req.getFbean().getArrival_time());
								System.out.println("Departure Time======="+req.getFbean().getDeparture_time());
								// System.out.println(req.getPassportno());
								// System.out.println(req.getVisano());

							} catch (AirlineException e) {

								System.out.println("Flight Booking unseccessful please try again!");
							}
							break;
						case 2:

							getprocess();

						}
					}

					////
					//// else {
					//// System.out.println("Sorry! No Flights are available for your source and
					//// destination");
					//// }
					//
					break;

				case 5:
					System.out.println(" Enter the regestration id to be removed");
					int pid = scanner.nextInt();
					try {
						boolean isRemoved = user1.cancellation(pid);
						if (isRemoved) {
							System.out.println("Ticket cancelled successfully");
						}
					} catch (AirlineException e) {
						System.out.println(e.getMessage());

					}

					break;

				case 6:
					getprocess();
					break;
				default:

					System.out.println("Incorrect entry. Please input only a positive integer.");
					break;
				}
			} catch (Exception ex) {
				System.out.println("Incorrect entry. Please input only a positive integer.");
				scanner.nextLine();
			}
		} while (true);

	}// end of subprocess()

	public void flightdetails() {
		UserService user1 = new UserServiceImpl();

		List<FlightDetailsInfoBean> info = user1.getFlightDetails();
		for (FlightDetailsInfoBean fliBean : info) {

			if (fliBean != null) {
				System.out.println("-----------------------------------");
				System.out.println(fliBean.toString());
				// System.out.println("Flight code is-->" + fliBean.getFlightcode());
				// System.out.println("Flight Name is-->" + fliBean.getFlightname());
				// System.out.println("Source is-->" + fliBean.getSource());
				// System.out.println("Destination is-->" + fliBean.getDestination());
				// System.out.println("ArrivalTime is--->" + fliBean.getArrival_time());

			} else {
				System.out.println("flight info is not present");
			}
		}

	}

} // End of class




//
//do {
//	UserLoginInfoBean bean = new UserLoginInfoBean();
//
//	do {
//		try {
//			System.out.println("Enter regId to register it should contain 5 digits :");
//			regid = scanner.nextInt();
//		//	validations.validatedId(regid);
//			bean.setRegId(regid);
//			flag = user1.register(bean);
//		System.out.println("Back to controller");	
//		} catch (InputMismatchException e) {
//			flag = false;
//			System.err.println("Id should contains only digits");
//			scanner.nextInt();
//		} catch (AirlineException e) {
//			flag = false;
//			System.err.println(e.getMessage());
//		}
//	} while (!flag);
//	do {
//		try {
//			System.out.println("Enter Your Full Name :");
//			userName = scanner.next();
//			// validation.validatedEmail(username1);
//			flag = user1.register(bean);
//		} catch (InputMismatchException e) {
//			flag = false;
//			System.err.println("name should be proper ");
//		} catch (AirlineException e) {
//			flag = false;
//			System.err.println(e.getMessage());
//		}
//	} while (!flag);
//
//	do {
//		try {
//			System.out.println("Enter mobile number :");
//			mobileNumber = scanner.nextLong();
//			// validation.validatedEmail(username1);
//			flag = true;
//		} catch (InputMismatchException e) {
//			flag = false;
//			System.err.println("mobile number should contain 10 digits ");
//		} catch (AirlineException e) {
//			flag = false;
//			System.err.println(e.getMessage());
//		}
//	} while (!flag);
//
//	do {
//		try {
//			System.out.println("Enter Email :");
//			emailId = scanner.next();
//			// validations.validatedEmail(username);
//			flag = true;
//		} catch (InputMismatchException e) {
//			flag = false;
//			System.err.println("Email should be proper ");
//		} catch (AirlineException e) {
//			flag = false;
//			System.err.println(e.getMessage());
//		}
//	} while (!flag);
//
//	do {
//		try {
//			System.out.println("Enter Password :");
//			password = scanner.next();
//			// validations.validatedPassword(password);
//			flag = true;
//		} catch (InputMismatchException e) {
//			flag = false;
//			System.err.println("Enter correct Password ");
//		} catch (AirlineException e) {
//			flag = false;
//			System.err.println(e.getMessage());
//		}
//	} while (!flag);
////			UserLoginInfoBean bean = new UserLoginInfoBean();
////	bean.setRegId(regid);
////	bean.setUserName(userName);
////	bean.setMobileNumber(mobileNumber);
////	bean.setEmailId(emailId);
////	bean.setPassword(password);
//
//	boolean check = user1.register(bean);
//	if (check) {
//		System.out.println("Registered");
//	} else {
//		System.out.println("Email already exist");
//	}
//	subprocess();
//	}while(flag);
//	break;
//
